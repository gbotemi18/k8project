1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "ip-reversal-app.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "ip-reversal-app.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "ip-reversal-app.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "ip-reversal-app.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. Get the application status:
   kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "ip-reversal-app.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"

3. View the application logs:
   kubectl logs --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "ip-reversal-app.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"

4. Check the application health:
   kubectl exec --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "ip-reversal-app.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -- curl -f http://localhost:{{ .Values.config.port }}/api/health

5. API Documentation:
   {{- if .Values.ingress.enabled }}
   {{- range $host := .Values.ingress.hosts }}
   {{- range .paths }}
   http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}api/docs
   {{- end }}
   {{- end }}
   {{- else }}
   Available at /api/docs endpoint
   {{- end }}

6. Database Configuration:
   {{- if .Values.database.external.enabled }}
   Using external database: {{ .Values.database.external.host }}:{{ .Values.database.external.port }}
   {{- else }}
   Using internal database with persistence
   {{- end }}

7. Monitoring:
   {{- if .Values.monitoring.enabled }}
   ServiceMonitor created for Prometheus integration
   {{- end }}

8. Scaling:
   {{- if .Values.hpa.enabled }}
   Horizontal Pod Autoscaler enabled ({{ .Values.hpa.minReplicas }}-{{ .Values.hpa.maxReplicas }} replicas)
   {{- end }} 